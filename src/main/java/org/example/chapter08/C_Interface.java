package org.example.chapter08;

// === 추상클래스 vs 인터페이스 === //
// 1) 추상클래스
//    : 공통적인 기능을 제공하는 '부분적 구현'
//    - 구성요소: 추상메서드, 구체(구현)메서드, 필드, 생성자(객체의 직접적 생성은 불가) 가 포함됨
//    - 단일 상속만 가능 (extends)
//    > 기본 구현을 제공 & 확장 가능 의 기능을 가짐

// 2) 인터페이스
//    : 클래스의 행동을 정의함
//    - 구성요소: 추상메서드, 상수, 디폴트 메서드, 정적 메서드
//    - 다중구현이 가능함 (implements)
//    > 객체가 해야할 동작(행위)을 정의한 약속

// ex) 색칠도구(인터페이스) - 색연필, 물감, 싸인펜 (구현 클래스)
//                  악기 - 피아노, 드럼, 기타....
// >> 공통된 기능이 있지만, 방식이 다름 -> 공통적으로 가지는 규칙이 있되, 고유의 행동도 있을 수 있음?

// 인터페이스의 목적
// - 약속(규약)을 통해 모두가 같은 규칙으로 사용
// - 다양한 방식으로 동작하지만 사용하는 방법을 동일하게 함
// - 유지보수와 확장성을 향상시킴

public class C_Interface {
}
